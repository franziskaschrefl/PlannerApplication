@inject DataTransferObject DTObject
@rendermode InteractiveServer

<ul class="nav nav-tabs">
    <li class="nav-item">
        <button type="button" class="nav-link " @onclick=@(()=> changeDay(-3))>@(DTObject.SelectedDate.AddDays(-3))</button>
    </li>
    <li class="nav-item">
        <button type="button" class="nav-link" @onclick=@(()=> changeDay(-2))>@(DTObject.SelectedDate.AddDays(-2))</button>
    </li>
    <li class="nav-item">
        <button type="button" class="nav-link" @onclick=@(()=> changeDay(-1))>@(DTObject.SelectedDate.AddDays(-1))</button>
    </li>
    <li class="nav-item">
        <button type="button" class="nav-link active" aria-current="page">@DTObject.SelectedDate</button>
    </li>
    <li class="nav-item">
        <button type="button" class="nav-link" @onclick="@(()=> changeDay(1))">@(DTObject.SelectedDate.AddDays(1))</button>
    </li>
    <li class="nav-item">
        <button type="button" class="nav-link" @onclick=@(()=> changeDay(2))>@(DTObject.SelectedDate.AddDays(2))</button>
    </li>
    <li class="nav-item">
        <button type="button" class="nav-link" @onclick=@(()=> changeDay(3))>@(DTObject.SelectedDate.AddDays(3))</button>
    </li>
</ul>

@code {


    protected override void OnInitialized()
    {
        base.OnInitialized();
        DTObject.OnDateChange += async () => await InvokeAsync(StateHasChanged);
    }



    private void changeDay(int days)
    {
        DTObject.SelectedDate = DTObject.SelectedDate.AddDays(days);
        Console.WriteLine("click: " + DTObject.SelectedDate);
        
        
    }
}
