
@rendermode InteractiveServer

<ul class="nav nav-tabs">
    <li class="nav-item">
        <button type="button" class="nav-link " @onclick=@(()=> changeDay(-3))>@(SelectedDay.AddDays(-3))</button>
    </li>
    <li class="nav-item">
        <button type="button" class="nav-link" @onclick=@(()=> changeDay(-2))>@(SelectedDay.AddDays(-2))</button>
    </li>
    <li class="nav-item">
        <button type="button" class="nav-link" @onclick=@(()=> changeDay(-1))>@(SelectedDay.AddDays(-1))</button>
    </li>
    <li class="nav-item">
        <button type="button" class="nav-link active" aria-current="page">@SelectedDay</button>
    </li>
    <li class="nav-item">
        <button type="button" class="nav-link" @onclick="@(()=> changeDay(1))">@(SelectedDay.AddDays(1))</button>
    </li>
    <li class="nav-item">
        <button type="button" class="nav-link" @onclick=@(()=> changeDay(2))>@(SelectedDay.AddDays(2))</button>
    </li>
    <li class="nav-item">
        <button type="button" class="nav-link" @onclick=@(()=> changeDay(3))>@(SelectedDay.AddDays(3))</button>
    </li>
</ul>

@code {
    [Parameter]
    public Action OnDateChange { get; set; }


    public DateOnly SelectedDay = DateOnly.FromDateTime(DateTime.Now);

    private void changeDay(int days)
    {
        SelectedDay = SelectedDay.AddDays(days);
        Console.WriteLine("click: "+SelectedDay);
        OnDateChange?.Invoke();
        StateHasChanged();
    }
}
